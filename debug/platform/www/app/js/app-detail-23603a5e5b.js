'use strict';

require.config({
  baseUrl: '../',
  paths: {
    'platformConf': 'public/js/platformConf-541e3fb1ce.js'
  }
});
require(['platformConf'], function (configpaths) {
  // configpaths.paths.dialog = "myspace/js/appDialog.js";
  require.config(configpaths);
  define('', ['jquery', 'service', 'tools', 'layer', 'template', 'footer', 'header'], function ($, service, tools, layer, template, footer, header) {
    var typeList = null;

    var appDataList = {};
    getCategory();

    function getCategory() {
      $.ajax({
        url: service.htmlHost + '/pf/api/app/types',
        type: 'GET',
        success: function success(data) {
          if (data && data.code == "success") {
            if (data.data && data.data.length > 0) {
              typeList = data.data;
              $('#application_content_type').html(template("applicationContentType", data));
              if ($("#recommended_list").length > 0) loadAppData('recommended_list', '', '1', false);
              loadAppData('application_list', '', '0', true);
            }
          } else {
            alert("获取应用分类异常");
          }
        }
      });
    };

    function loadAppData(id, category, isRecommend, firstLoad) {
      $('#' + id).html("");
      var data = {};
      if (category != '') {
        data['category'] = category;
      }
      if (isRecommend === '1') {
        data['isRecommend'] = isRecommend;
      }
      $.ajax({
        url: service.htmlHost + '/pf/api/app/list',
        type: 'GET',
        data: data,
        success: function success(data) {
          if (data && data.code == "success") {
            var html = "";
            if (data.data && data.data.length > 0) {
              if (isRecommend === '0') {
                appDataList['all'] = data.data;
              }
              $.each(data.data, function (i) {
                data.data[i].logo = data.data[i].logo ? getPicPath(data.data[i].logo) : "";
                data.data[i].category = data.data[i].category ? getType(data.data[i].category) : "其他";
              });
              html = template(id + "_", data);
            } else {
              html = showprompt();
            }
            $("#" + id).html(html);
            if (firstLoad && tools.getQueryObj().targetApp) {
              $("#application_list li[appid='" + tools.getQueryObj().targetApp + "'").find(".appName").click();
            }
          } else {
            alert("获取应用异常");
          }
        }
      });
    };

    function getAppByType(category) {
      var data = {};
      if (category) {
        data['category'] = category;
      }
      $.ajax({
        url: service.htmlHost + '/pf/api/app/list',
        type: 'GET',
        data: data,
        success: function success(data) {
          if (data && data.code == "success") {
            var html = "";
            if (data.data && data.data.length > 0) {
              appDataList[category ? category : 'all'] = data.data;
              $.each(data.data, function (i) {
                data.data[i].logo = data.data[i].logo ? getPicPath(data.data[i].logo) : "";
                data.data[i].category = data.data[i].category ? getType(data.data[i].category) : "其他";
              });
              html = template("application_list_", data);
            } else {
              html = showprompt();
            }
            $("#application_list").html(html);
          } else {
            alert("获取应用异常");
          }
        }
      });
    }

    $('body').delegate('#application_content_type li', 'click', function () {
      $('.application_content_box').show();
      $('#app-details').hide();
      $(this).addClass('application_active').siblings().removeClass('application_active');
      if (appDataList[$(this).attr("type")]) {
        $("#application_list").html(template("application_list_", { 'data': appDataList[$(this).attr("type")] }));
      } else {
        getAppByType($(this).attr("type"));
      }
    });

    $('body').delegate('.recommended_list li , .application_content_list li', 'click', function () {
      var appid = $(this).attr("appid");
      var isneedLogin = $(this).find(".appName").attr('isLogin');
      var praiseNum = $(this).find('.like_num_' + appid).html();
      var type = $(this).find('.type_' + appid).html();
      if ($(this).attr("isDetail") == "false") {
        verifyApp(appid);
      } else {
        showAppDetails(appid, praiseNum, type, isneedLogin);
        $(this).unbind();
        return false;
      }
    });

    function showAppDetails(id, praiseNum, type, isneedLogin) {
      $.ajax({
        url: service.htmlHost + "/pf/api/app/detail/" + id,
        type: "get",
        success: function success(data) {
          if (data.code == "success") {
            data.data.praiseNum = praiseNum;
            data.data.fappcategory = type;
            data.data.ispraise = parseInt(praiseNum) > 0 ? true : false;
            $('.application_content_box').hide();
            $('#app-details').show();
            lookApp(data.data);
          } else if (data.code == "failed") {
            layer.alert("操作错误。", { icon: 0 });
          }
        }
      });
    };

    function lookApp(data) {
      data.logo = data.logo ? getPicPath(data.logo) : "";
      data.category = data.category ? getType(data.category) : "其他";
      $(".detail-cont .detail-msg").html(template('detailMsg', { 'data': data }));

      var $prev = $('#app-details').find('.prev-btn');
      var $next = $('#app-details').find('.next-btn');
      var width = $('#app-details').find('.pic-box').width();
      var $picBox = $('#app-details').find('.pic-list');
      var contentPic = '';
      var onOff = true;
      var lookNum = 1;
      var newVar = data.promotePictures ? data.promotePictures.split(",") : [];
      var images = newVar;
      var length = images.length;
      if (length < 2) {
        //images = ['images/banner1.jpg'];
        for (x in images) {
          //contentPic += '<li><img src="' + (images[x]) + '" alt=""></li>'
          contentPic += '<li><img src="' + getPicPath(images[x]) + '" alt=""></li>';
          $picBox.html(contentPic);
        }
      } else {
        initPicScroll();
      }

      function initPicScroll() {
        for (x in images) {
          //contentPic += '<li><img src="' + (images[x]) + '" alt=""></li>'
          contentPic += '<li><img src="' + getPicPath(images[x]) + '" alt=""></li>';
        }
        for (var k = 0; k < Math.min(3, length); k++) {
          //contentPic += '<li><img src="' + (images[k]) + '" alt=""></li>'
          contentPic += '<li><img src="' + getPicPath(images[k]) + '" alt=""></li>';
        }
        $picBox.width((length + Math.min(3, length)) * width);
        $picBox.html(contentPic);
        length = length + Math.min(3, length);
        $picBox.css('left', -width);
      };

      function move(n) {
        $picBox.animate({
          'left': width * -n
        }, 800, function () {
          onOff = true;
        });
      }

      //下一个
      $next.unbind().bind('click', function () {
        if (!onOff || $picBox.find("li").length < 2) return;
        if (lookNum == length - 2) {
          lookNum = 0;
          $picBox.css('left', -lookNum * width);
        }
        ;
        lookNum++;
        onOff = false;
        move(lookNum);
      });
      //上一个
      $prev.unbind().bind('click', function () {
        if (!onOff || $picBox.find("li").length < 2) return;
        if (lookNum == 0) {
          lookNum = length - 2;
          $picBox.css('left', -lookNum * width);
        }
        lookNum--;
        onOff = false;
        move(lookNum);
      });
    };

    function getType(category) {
      for (var i = 0; i < typeList.length; i++) {
        if (category == typeList[i].value) {
          return typeList[i].name;
        }
      }
    };

    function getPicPath(id) {
      return service.prefix + '/pf/res/download/' + id;
    };

    function showprompt() {
      return "<p id='no-content'>没有您查看的内容</p>";
    };

    /**
     *
     * @param appId
     * @param kindCode 1:客户端 2：浏览器
     */
    function verifyApp(appId, kindCode) {
      var w = window;
      if (kindCode == '2') {
        w = window.open('about:blank');
      }
      $.ajax({
        url: service.htmlHost + "/pf/api/app/verify",
        type: "get",
        data: { "appId": appId },
        success: function success(data) {
          if (data.code == "success") {
            w.location.href = data.data;
          } else if (data.code == "failed") {
            if (kindCode == '2') {
              w.close();
            }
            layer.alert(data.msg, { icon: 0 });
          }
        },
        error: function error(data) {
          layer.alert("请求失败", { icon: 0 });
        }
      });
    };

    function downVerifyApp(appId) {
      $.ajax({
        url: service.htmlHost + "/pf/api/app/verifyDown",
        type: "get",
        data: { "appId": appId },
        success: function success(data) {
          if (data.code == "success") {
            window.location.href = data.data;
          } else if (data.code == "failed") {
            layer.alert("您没有该权限下载。", { icon: 0 });
          }
        },
        error: function error(data) {
          layer.alert("请求失败", { icon: 0 });
        }
      });
    };

    $("body").delegate('#app-details .into-app', 'click', function (e) {
      e.stopPropagation();
      if (!header.getUser()) {
        layer.alert("请登录后操作。", { icon: 0 });
        return false;
      } else {
        verifyApp($(this).attr('appid'), $(this).attr('kindCode'));
      }
    });
    $("body").delegate('#app-details .down-app', 'click', function (e) {
      e.stopPropagation();
      if (!header.getUser()) {
        layer.alert("请登录后操作。", { icon: 0 });
        return false;
      } else {
        downVerifyApp($(this).attr('appid'));
      }
    });
    $("body").delegate('.praise-icon2', 'click', function (e) {
      e.stopPropagation();
      var This = this;
      if (!header.getUser()) {
        layer.alert("请登录后操作。", { icon: 0 });
        return false;
      } else {
        if ($(This)[0].tagName == "SPAN" && !$(This).hasClass("praised") || $(This)[0].tagName == "STRONG" && !$(This).hasClass("praise-icon-active")) {
          praiseIcon($(This).attr("appid"), function () {
            var $spanApp = $("span[appid='" + $(This).attr("appid") + "']");
            var $strongApp = $("strong[appid='" + $(This).attr("appid") + "']");
            if ($spanApp.length > 0) {
              $spanApp.addClass("praised").removeClass("unpraise_" + $(This).attr("appid"));
              $.each($spanApp, function (i) {
                $(this).siblings("span").text(parseInt($(this).siblings("span").text()) + 1);
              });
            }
            if ($strongApp.length > 0) {
              $strongApp.addClass("praise-icon-active");
              $strongApp.siblings("strong").text(parseInt($strongApp.siblings("strong").text()) + 1);
            }
            for (var key in appDataList) {
              $.each(appDataList[key], function (i) {
                if (appDataList[key][i].id == $(This).attr("appid")) {
                  appDataList[key][i].isLike = true;
                  appDataList[key][i].likeNum = parseInt(appDataList[key][i].likeNum) + 1;
                }
              });
            }
          });
        }
      }
    });

    function praiseIcon(id, callback) {
      $.ajax({
        type: "POST",
        url: service.htmlHost + "/pf/api/app/like",
        data: { "appId": id, "isLike": true },
        success: function success(data) {
          if (data.code == "success") {
            //window.location.search = 'targetApp='+data.id;
            callback();
          } else if (data.code == "login_error") {
            layer.alert(data.msg, { icon: 0 });
          }
        },
        error: function error(_error) {
          layer.alert("添加出错,请稍后重试。", { icon: 0 });
        }
      });
    }
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9qcy9hcHAtZGV0YWlsLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJjb25maWciLCJiYXNlVXJsIiwicGF0aHMiLCJjb25maWdwYXRocyIsImRlZmluZSIsIiQiLCJzZXJ2aWNlIiwidG9vbHMiLCJsYXllciIsInRlbXBsYXRlIiwiZm9vdGVyIiwiaGVhZGVyIiwidHlwZUxpc3QiLCJhcHBEYXRhTGlzdCIsImdldENhdGVnb3J5IiwiYWpheCIsInVybCIsImh0bWxIb3N0IiwidHlwZSIsInN1Y2Nlc3MiLCJkYXRhIiwiY29kZSIsImxlbmd0aCIsImh0bWwiLCJsb2FkQXBwRGF0YSIsImFsZXJ0IiwiaWQiLCJjYXRlZ29yeSIsImlzUmVjb21tZW5kIiwiZmlyc3RMb2FkIiwiZWFjaCIsImkiLCJsb2dvIiwiZ2V0UGljUGF0aCIsImdldFR5cGUiLCJzaG93cHJvbXB0IiwiZ2V0UXVlcnlPYmoiLCJ0YXJnZXRBcHAiLCJmaW5kIiwiY2xpY2siLCJnZXRBcHBCeVR5cGUiLCJkZWxlZ2F0ZSIsInNob3ciLCJoaWRlIiwiYWRkQ2xhc3MiLCJzaWJsaW5ncyIsInJlbW92ZUNsYXNzIiwiYXR0ciIsImFwcGlkIiwiaXNuZWVkTG9naW4iLCJwcmFpc2VOdW0iLCJ2ZXJpZnlBcHAiLCJzaG93QXBwRGV0YWlscyIsInVuYmluZCIsImZhcHBjYXRlZ29yeSIsImlzcHJhaXNlIiwicGFyc2VJbnQiLCJsb29rQXBwIiwiaWNvbiIsIiRwcmV2IiwiJG5leHQiLCJ3aWR0aCIsIiRwaWNCb3giLCJjb250ZW50UGljIiwib25PZmYiLCJsb29rTnVtIiwibmV3VmFyIiwicHJvbW90ZVBpY3R1cmVzIiwic3BsaXQiLCJpbWFnZXMiLCJ4IiwiaW5pdFBpY1Njcm9sbCIsImsiLCJNYXRoIiwibWluIiwiY3NzIiwibW92ZSIsIm4iLCJhbmltYXRlIiwiYmluZCIsInZhbHVlIiwibmFtZSIsInByZWZpeCIsImFwcElkIiwia2luZENvZGUiLCJ3Iiwid2luZG93Iiwib3BlbiIsImxvY2F0aW9uIiwiaHJlZiIsImNsb3NlIiwibXNnIiwiZXJyb3IiLCJkb3duVmVyaWZ5QXBwIiwiZSIsInN0b3BQcm9wYWdhdGlvbiIsImdldFVzZXIiLCJUaGlzIiwidGFnTmFtZSIsImhhc0NsYXNzIiwicHJhaXNlSWNvbiIsIiRzcGFuQXBwIiwiJHN0cm9uZ0FwcCIsInRleHQiLCJrZXkiLCJpc0xpa2UiLCJsaWtlTnVtIiwiY2FsbGJhY2siXSwibWFwcGluZ3MiOiI7O0FBQUFBLFFBQVFDLE1BQVIsQ0FBZTtBQUNiQyxXQUFTLEtBREk7QUFFYkMsU0FBTztBQUNMLG9CQUFnQjtBQURYO0FBRk0sQ0FBZjtBQU1BSCxRQUFRLENBQUMsY0FBRCxDQUFSLEVBQTBCLFVBQVVJLFdBQVYsRUFBdUI7QUFDL0M7QUFDQUosVUFBUUMsTUFBUixDQUFlRyxXQUFmO0FBQ0FDLFNBQU8sRUFBUCxFQUFXLENBQUMsUUFBRCxFQUFXLFNBQVgsRUFBc0IsT0FBdEIsRUFBK0IsT0FBL0IsRUFBd0MsVUFBeEMsRUFBb0QsUUFBcEQsRUFBOEQsUUFBOUQsQ0FBWCxFQUNFLFVBQVVDLENBQVYsRUFBYUMsT0FBYixFQUFzQkMsS0FBdEIsRUFBNkJDLEtBQTdCLEVBQW9DQyxRQUFwQyxFQUE4Q0MsTUFBOUMsRUFBc0RDLE1BQXRELEVBQThEO0FBQzVELFFBQUlDLFdBQVcsSUFBZjs7QUFFQSxRQUFJQyxjQUFjLEVBQWxCO0FBQ0FDOztBQUVBLGFBQVNBLFdBQVQsR0FBdUI7QUFDckJULFFBQUVVLElBQUYsQ0FBTztBQUNMQyxhQUFLVixRQUFRVyxRQUFSLEdBQW1CLG1CQURuQjtBQUVMQyxjQUFNLEtBRkQ7QUFHTEMsaUJBQVMsaUJBQVVDLElBQVYsRUFBZ0I7QUFDdkIsY0FBSUEsUUFBUUEsS0FBS0MsSUFBTCxJQUFhLFNBQXpCLEVBQW9DO0FBQ2xDLGdCQUFJRCxLQUFLQSxJQUFMLElBQWFBLEtBQUtBLElBQUwsQ0FBVUUsTUFBVixHQUFtQixDQUFwQyxFQUF1QztBQUNyQ1YseUJBQVdRLEtBQUtBLElBQWhCO0FBQ0FmLGdC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TWlCLEtBQU4sQ0FBWSxhQUFaLEVBQTJCLEVBQUNpQyxNQUFNLENBQVAsRUFBM0I7QUFDRDtBQWRJLE9BQVA7QUFnQkQ7QUFDRixHQTdWSDtBQStWRCxDQWxXRCIsImZpbGUiOiJhcHAvanMvYXBwLWRldGFpbC0yMzYwM2E1ZTViLmpzIiwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZS5jb25maWcoe1xyXG4gIGJhc2VVcmw6ICcuLi8nLFxyXG4gIHBhdGhzOiB7XHJcbiAgICAncGxhdGZvcm1Db25mJzogJ3B1YmxpYy9qcy9wbGF0Zm9ybUNvbmYuanMnXHJcbiAgfVxyXG59KTtcclxucmVxdWlyZShbJ3BsYXRmb3JtQ29uZiddLCBmdW5jdGlvbiAoY29uZmlncGF0aHMpIHtcclxuICAvLyBjb25maWdwYXRocy5wYXRocy5kaWFsb2cgPSBcIm15c3BhY2UvanMvYXBwRGlhbG9nLmpzXCI7XHJcbiAgcmVxdWlyZS5jb25maWcoY29uZmlncGF0aHMpO1xyXG4gIGRlZmluZSgnJywgWydqcXVlcnknLCAnc2VydmljZScsICd0b29scycsICdsYXllcicsICd0ZW1wbGF0ZScsICdmb290ZXInLCAnaGVhZGVyJ10sXHJcbiAgICBmdW5jdGlvbiAoJCwgc2VydmljZSwgdG9vbHMsIGxheWVyLCB0ZW1wbGF0ZSwgZm9vdGVyLCBoZWFkZXIpIHtcclxuICAgICAgdmFyIHR5cGVMaXN0ID0gbnVsbDtcclxuXHJcbiAgICAgIHZhciBhcHBEYXRhTGlzdCA9IHt9O1xyXG4gICAgICBnZXRDYXRlZ29yeSgpO1xyXG5cclxuICAgICAgZnVuY3Rpb24gZ2V0Q2F0ZWdvcnkoKSB7XHJcbiAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgIHVybDogc2VydmljZS5odG1sSG9zdCArICcvcGYvYXBpL2FwcC90eXBlcycsXHJcbiAgICAgICAgICB0eXBlOiAnR0VUJyxcclxuICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgIGlmIChkYXRhICYmIGRhdGEuY29kZSA9PSBcInN1Y2Nlc3NcIikge1xyXG4gICAgICAgICAgICAgIGlmIChkYXRhLmRhdGEgJiYgZGF0YS5kYXRhLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgICAgIHR5cGVMaXN0ID0gZGF0YS5kYXRhO1xyXG4gICAgICAgICAgICAgICAgJCgnI2FwcGxpY2F0aW9uX2NvbnRlbnRfdHlwZScpLmh0bWwodGVtcGxhdGUoXCJhcHBsaWNhdGlvbkNvbnRlbnRUeXBlXCIsIGRhdGEpKTtcclxuICAgICAgICAgICAgICAgIGlmICgkKFwiI3JlY29tbWVuZGVkX2xpc3RcIikubGVuZ3RoID4gMCkgbG9hZEFwcERhdGEoJ3JlY29tbWVuZGVkX2xpc3QnLCAnJywgJzEnLCBmYWxzZSk7XHJcbiAgICAgICAgICAgICAgICBsb2FkQXBwRGF0YSgnYXBwbGljYXRpb25fbGlzdCcsICcnLCAnMCcsIHRydWUpO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICBhbGVydChcIuiOt+WPluW6lOeUqOWIhuexu+W8guW4uFwiKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH07XHJcblxyXG4gICAgICBmdW5jdGlvbiBsb2FkQXBwRGF0YShpZCwgY2F0ZWdvcnksIGlzUmVjb21tZW5kLCBmaXJzdExvYWQpIHtcclxuICAgICAgICAkKCcjJyArIGlkKS5odG1sKFwiXCIpO1xyXG4gICAgICAgIHZhciBkYXRhID0ge307XHJcbiAgICAgICAgaWYgKGNhdGVnb3J5ICE9ICcnKSB7XHJcbiAgICAgICAgICBkYXRhWydjYXRlZ29yeSddID0gY2F0ZWdvcnk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChpc1JlY29tbWVuZCA9PT0gJzEnKSB7XHJcbiAgICAgICAgICBkYXRhWydpc1JlY29tbWVuZCddID0gaXNSZWNvbW1lbmQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICB1cmw6IHNlcnZpY2UuaHRtbEhvc3QgKyAnL3BmL2FwaS9hcHAvbGlzdCcsXHJcbiAgICAgICAgICB0eXBlOiAnR0VUJyxcclxuICAgICAgICAgIGRhdGE6IGRhdGEsXHJcbiAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICBpZiAoZGF0YSAmJiBkYXRhLmNvZGUgPT0gXCJzdWNjZXNzXCIpIHtcclxuICAgICAgICAgICAgICB2YXIgaHRtbCA9IFwiXCI7XHJcbiAgICAgICAgICAgICAgaWYgKGRhdGEuZGF0YSAmJiBkYXRhLmRhdGEubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKGlzUmVjb21tZW5kID09PSAnMCcpIHtcclxuICAgICAgICAgICAgICAgICAgYXBwRGF0YUxpc3RbJ2FsbCddID0gZGF0YS5kYXRhO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgJC5lYWNoKGRhdGEuZGF0YSwgZnVuY3Rpb24gKGkpIHtcclxuICAgICAgICAgICAgICAgICAgZGF0YS5kYXRhW2ldLmxvZ28gPSBkYXRhLmRhdGFbaV0ubG9nbyA/IGdldFBpY1BhdGgoZGF0YS5kYXRhW2ldLmxvZ28pIDogXCJcIjtcclxuICAgICAgICAgICAgICAgICAgZGF0YS5kYXRhW2ldLmNhdGVnb3J5ID0gZGF0YS5kYXRhW2ldLmNhdGVnb3J5ID8gZ2V0VHlwZShkYXRhLmRhdGFbaV0uY2F0ZWdvcnkpIDogXCLlhbbku5ZcIjtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgaHRtbCA9IHRlbXBsYXRlKGlkICsgXCJfXCIsIGRhdGEpO1xyXG4gICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBodG1sID0gc2hvd3Byb21wdCgpO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAkKFwiI1wiICsgaWQpLmh0bWwoaHRtbCk7XHJcbiAgICAgICAgICAgICAgaWYgKGZpcnN0TG9hZCAmJiB0b29scy5nZXRRdWVyeU9iaigpLnRhcmdldEFwcCkge1xyXG4gICAgICAgICAgICAgICAgJChcIiNhcHBsaWNhdGlvbl9saXN0IGxpW2FwcGlkPSdcIiArIHRvb2xzLmdldFF1ZXJ5T2JqKCkudGFyZ2V0QXBwICsgXCInXCIpLmZpbmQoXCIuYXBwTmFtZVwiKS5jbGljaygpO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICBhbGVydChcIuiOt+WPluW6lOeUqOW8guW4uFwiKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH07XHJcblxyXG4gICAgICBmdW5jdGlvbiBnZXRBcHBCeVR5cGUoY2F0ZWdvcnkpIHtcclxuICAgICAgICB2YXIgZGF0YSA9IHt9O1xyXG4gICAgICAgIGlmIChjYXRlZ29yeSkge1xyXG4gICAgICAgICAgZGF0YVsnY2F0ZWdvcnknXSA9IGNhdGVnb3J5O1xyXG4gICAgICAgIH1cclxuICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgdXJsOiBzZXJ2aWNlLmh0bWxIb3N0ICsgJy9wZi9hcGkvYXBwL2xpc3QnLFxyXG4gICAgICAgICAgdHlwZTogJ0dFVCcsXHJcbiAgICAgICAgICBkYXRhOiBkYXRhLFxyXG4gICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgaWYgKGRhdGEgJiYgZGF0YS5jb2RlID09IFwic3VjY2Vzc1wiKSB7XHJcbiAgICAgICAgICAgICAgdmFyIGh0bWwgPSBcIlwiO1xyXG4gICAgICAgICAgICAgIGlmIChkYXRhLmRhdGEgJiYgZGF0YS5kYXRhLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgICAgIGFwcERhdGFMaXN0WyhjYXRlZ29yeSA/IGNhdGVnb3J5IDogJ2FsbCcpXSA9IGRhdGEuZGF0YTtcclxuICAgICAgICAgICAgICAgICQuZWFjaChkYXRhLmRhdGEsIGZ1bmN0aW9uIChpKSB7XHJcbiAgICAgICAgICAgICAgICAgIGRhdGEuZGF0YVtpXS5sb2dvID0gZGF0YS5kYXRhW2ldLmxvZ28gPyBnZXRQaWNQYXRoKGRhdGEuZGF0YVtpXS5sb2dvKSA6IFwiXCI7XHJcbiAgICAgICAgICAgICAgICAgIGRhdGEuZGF0YVtpXS5jYXRlZ29yeSA9IGRhdGEuZGF0YVtpXS5jYXRlZ29yeSA/IGdldFR5cGUoZGF0YS5kYXRhW2ldLmNhdGVnb3J5KSA6IFwi5YW25LuWXCI7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIGh0bWwgPSB0ZW1wbGF0ZShcImFwcGxpY2F0aW9uX2xpc3RfXCIsIGRhdGEpO1xyXG4gICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBodG1sID0gc2hvd3Byb21wdCgpO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAkKFwiI2FwcGxpY2F0aW9uX2xpc3RcIikuaHRtbChodG1sKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICBhbGVydChcIuiOt+WPluW6lOeUqOW8guW4uFwiKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICQoJ2JvZHknKS5kZWxlZ2F0ZSgnI2FwcGxpY2F0aW9uX2NvbnRlbnRfdHlwZSBsaScsICdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkKCcuYXBwbGljYXRpb25fY29udGVudF9ib3gnKS5zaG93KCk7XHJcbiAgICAgICAgJCgnI2FwcC1kZXRhaWxzJykuaGlkZSgpO1xyXG4gICAgICAgICQodGhpcykuYWRkQ2xhc3MoJ2FwcGxpY2F0aW9uX2FjdGl2ZScpLnNpYmxpbmdzKCkucmVtb3ZlQ2xhc3MoJ2FwcGxpY2F0aW9uX2FjdGl2ZScpO1xyXG4gICAgICAgIGlmIChhcHBEYXRhTGlzdFskKHRoaXMpLmF0dHIoXCJ0eXBlXCIpXSkge1xyXG4gICAgICAgICAgJChcIiNhcHBsaWNhdGlvbl9saXN0XCIpLmh0bWwodGVtcGxhdGUoXCJhcHBsaWNhdGlvbl9saXN0X1wiLCB7J2RhdGEnOiBhcHBEYXRhTGlzdFskKHRoaXMpLmF0dHIoXCJ0eXBlXCIpXX0pKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgZ2V0QXBwQnlUeXBlKCQodGhpcykuYXR0cihcInR5cGVcIikpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcblxyXG4gICAgICAkKCdib2R5JykuZGVsZWdhdGUoJy5yZWNvbW1lbmRlZF9saXN0IGxpICwgLmFwcGxpY2F0aW9uX2NvbnRlbnRfbGlzdCBsaScsICdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgYXBwaWQgPSAkKHRoaXMpLmF0dHIoXCJhcHBpZFwiKTtcclxuICAgICAgICB2YXIgaXNuZWVkTG9naW4gPSAkKHRoaXMpLmZpbmQoXCIuYXBwTmFtZVwiKS5hdHRyKCdpc0xvZ2luJyk7XHJcbiAgICAgICAgdmFyIHByYWlzZU51bSA9ICQodGhpcykuZmluZCgnLmxpa2VfbnVtXycgKyBhcHBpZCkuaHRtbCgpO1xyXG4gICAgICAgIHZhciB0eXBlID0gJCh0aGlzKS5maW5kKCcudHlwZV8nICsgYXBwaWQpLmh0bWwoKTtcclxuICAgICAgICBpZiAoJCh0aGlzKS5hdHRyKFwiaXNEZXRhaWxcIikgPT0gXCJmYWxzZVwiKSB7XHJcbiAgICAgICAgICB2ZXJpZnlBcHAoYXBwaWQpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBzaG93QXBwRGV0YWlscyhhcHBpZCwgcHJhaXNlTnVtLCB0eXBlLCBpc25lZWRMb2dpbik7XHJcbiAgICAgICAgICAkKHRoaXMpLnVuYmluZCgpO1xyXG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcblxyXG4gICAgICBmdW5jdGlvbiBzaG93QXBwRGV0YWlscyhpZCwgcHJhaXNlTnVtLCB0eXBlLCBpc25lZWRMb2dpbikge1xyXG4gICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICB1cmw6IHNlcnZpY2UuaHRtbEhvc3QgKyBcIi9wZi9hcGkvYXBwL2RldGFpbC9cIiArIGlkLFxyXG4gICAgICAgICAgdHlwZTogXCJnZXRcIixcclxuICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgIGlmIChkYXRhLmNvZGUgPT0gXCJzdWNjZXNzXCIpIHtcclxuICAgICAgICAgICAgICBkYXRhLmRhdGEucHJhaXNlTnVtID0gcHJhaXNlTnVtO1xyXG4gICAgICAgICAgICAgIGRhdGEuZGF0YS5mYXBwY2F0ZWdvcnkgPSB0eXBlO1xyXG4gICAgICAgICAgICAgIGRhdGEuZGF0YS5pc3ByYWlzZSA9IHBhcnNlSW50KHByYWlzZU51bSkgPiAwID8gdHJ1ZSA6IGZhbHNlO1xyXG4gICAgICAgICAgICAgICQoJy5hcHBsaWNhdGlvbl9jb250ZW50X2JveCcpLmhpZGUoKTtcclxuICAgICAgICAgICAgICAkKCcjYXBwLWRldGFpbHMnKS5zaG93KCk7XHJcbiAgICAgICAgICAgICAgbG9va0FwcChkYXRhLmRhdGEpO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKGRhdGEuY29kZSA9PSBcImZhaWxlZFwiKSB7XHJcbiAgICAgICAgICAgICAgbGF5ZXIuYWxlcnQoXCLmk43kvZzplJnor6/jgIJcIiwge2ljb246IDB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9O1xyXG5cclxuICAgICAgZnVuY3Rpb24gbG9va0FwcChkYXRhKSB7XHJcbiAgICAgICAgZGF0YS5sb2dvID0gZGF0YS5sb2dvID8gZ2V0UGljUGF0aChkYXRhLmxvZ28pIDogXCJcIjtcclxuICAgICAgICBkYXRhLmNhdGVnb3J5ID0gZGF0YS5jYXRlZ29yeSA/IGdldFR5cGUoZGF0YS5jYXRlZ29yeSkgOiBcIuWFtuS7llwiO1xyXG4gICAgICAgICQoXCIuZGV0YWlsLWNvbnQgLmRldGFpbC1tc2dcIikuaHRtbCh0ZW1wbGF0ZSgnZGV0YWlsTXNnJywgeydkYXRhJzogZGF0YX0pKTtcclxuXHJcbiAgICAgICAgdmFyICRwcmV2ID0gJCgnI2FwcC1kZXRhaWxzJykuZmluZCgnLnByZXYtYnRuJyk7XHJcbiAgICAgICAgdmFyICRuZXh0ID0gJCgnI2FwcC1kZXRhaWxzJykuZmluZCgnLm5leHQtYnRuJyk7XHJcbiAgICAgICAgdmFyIHdpZHRoID0gJCgnI2FwcC1kZXRhaWxzJykuZmluZCgnLnBpYy1ib3gnKS53aWR0aCgpO1xyXG4gICAgICAgIHZhciAkcGljQm94ID0gJCgnI2FwcC1kZXRhaWxzJykuZmluZCgnLnBpYy1saXN0Jyk7XHJcbiAgICAgICAgdmFyIGNvbnRlbnRQaWMgPSAnJztcclxuICAgICAgICB2YXIgb25PZmYgPSB0cnVlO1xyXG4gICAgICAgIHZhciBsb29rTnVtID0gMTtcclxuICAgICAgICB2YXIgbmV3VmFyID0gZGF0YS5wcm9tb3RlUGljdHVyZXMgPyBkYXRhLnByb21vdGVQaWN0dXJlcy5zcGxpdChcIixcIikgOiBbXTtcclxuICAgICAgICB2YXIgaW1hZ2VzID0gbmV3VmFyO1xyXG4gICAgICAgIHZhciBsZW5ndGggPSBpbWFnZXMubGVuZ3RoO1xyXG4gICAgICAgIGlmIChsZW5ndGggPCAyKSB7XHJcbiAgICAgICAgICAvL2ltYWdlcyA9IFsnaW1hZ2VzL2Jhbm5lcjEuanBnJ107XHJcbiAgICAgICAgICBmb3IgKHggaW4gaW1hZ2VzKSB7XHJcbiAgICAgICAgICAgIC8vY29udGVudFBpYyArPSAnPGxpPjxpbWcgc3JjPVwiJyArIChpbWFnZXNbeF0pICsgJ1wiIGFsdD1cIlwiPjwvbGk+J1xyXG4gICAgICAgICAgICBjb250ZW50UGljICs9ICc8bGk+PGltZyBzcmM9XCInICsgZ2V0UGljUGF0aChpbWFnZXNbeF0pICsgJ1wiIGFsdD1cIlwiPjwvbGk+J1xyXG4gICAgICAgICAgICAkcGljQm94Lmh0bWwoY29udGVudFBpYyk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGluaXRQaWNTY3JvbGwoKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIGluaXRQaWNTY3JvbGwoKSB7XHJcbiAgICAgICAgICBmb3IgKHggaW4gaW1hZ2VzKSB7XHJcbiAgICAgICAgICAgIC8vY29udGVudFBpYyArPSAnPGxpPjxpbWcgc3JjPVwiJyArIChpbWFnZXNbeF0pICsgJ1wiIGFsdD1cIlwiPjwvbGk+J1xyXG4gICAgICAgICAgICBjb250ZW50UGljICs9ICc8bGk+PGltZyBzcmM9XCInICsgZ2V0UGljUGF0aChpbWFnZXNbeF0pICsgJ1wiIGFsdD1cIlwiPjwvbGk+J1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCBNYXRoLm1pbigzLCBsZW5ndGgpOyBrKyspIHtcclxuICAgICAgICAgICAgLy9jb250ZW50UGljICs9ICc8bGk+PGltZyBzcmM9XCInICsgKGltYWdlc1trXSkgKyAnXCIgYWx0PVwiXCI+PC9saT4nXHJcbiAgICAgICAgICAgIGNvbnRlbnRQaWMgKz0gJzxsaT48aW1nIHNyYz1cIicgKyBnZXRQaWNQYXRoKGltYWdlc1trXSkgKyAnXCIgYWx0PVwiXCI+PC9saT4nXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICAkcGljQm94LndpZHRoKChsZW5ndGggKyBNYXRoLm1pbigzLCBsZW5ndGgpKSAqIHdpZHRoKTtcclxuICAgICAgICAgICRwaWNCb3guaHRtbChjb250ZW50UGljKTtcclxuICAgICAgICAgIGxlbmd0aCA9IGxlbmd0aCArIE1hdGgubWluKDMsIGxlbmd0aCk7XHJcbiAgICAgICAgICAkcGljQm94LmNzcygnbGVmdCcsIC13aWR0aCk7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgZnVuY3Rpb24gbW92ZShuKSB7XHJcbiAgICAgICAgICAkcGljQm94LmFuaW1hdGUoe1xyXG4gICAgICAgICAgICAgICdsZWZ0Jzogd2lkdGggKiAtblxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICA4MDAsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICBvbk9mZiA9IHRydWU7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy/kuIvkuIDkuKpcclxuICAgICAgICAkbmV4dC51bmJpbmQoKS5iaW5kKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgIGlmICghb25PZmYgfHwgJHBpY0JveC5maW5kKFwibGlcIikubGVuZ3RoIDwgMikgcmV0dXJuO1xyXG4gICAgICAgICAgaWYgKGxvb2tOdW0gPT0gbGVuZ3RoIC0gMikge1xyXG4gICAgICAgICAgICBsb29rTnVtID0gMDtcclxuICAgICAgICAgICAgJHBpY0JveC5jc3MoJ2xlZnQnLCAtbG9va051bSAqIHdpZHRoKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIDtcclxuICAgICAgICAgIGxvb2tOdW0rKztcclxuICAgICAgICAgIG9uT2ZmID0gZmFsc2U7XHJcbiAgICAgICAgICBtb3ZlKGxvb2tOdW0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIC8v5LiK5LiA5LiqXHJcbiAgICAgICAgJHByZXYudW5iaW5kKCkuYmluZCgnY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICBpZiAoIW9uT2ZmIHx8ICRwaWNCb3guZmluZChcImxpXCIpLmxlbmd0aCA8IDIpIHJldHVybjtcclxuICAgICAgICAgIGlmIChsb29rTnVtID09IDApIHtcclxuICAgICAgICAgICAgbG9va051bSA9IGxlbmd0aCAtIDI7XHJcbiAgICAgICAgICAgICRwaWNCb3guY3NzKCdsZWZ0JywgLWxvb2tOdW0gKiB3aWR0aCk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBsb29rTnVtLS07XHJcbiAgICAgICAgICBvbk9mZiA9IGZhbHNlO1xyXG4gICAgICAgICAgbW92ZShsb29rTnVtKTtcclxuICAgICAgICB9KTtcclxuICAgICAgfTtcclxuXHJcbiAgICAgIGZ1bmN0aW9uIGdldFR5cGUoY2F0ZWdvcnkpIHtcclxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHR5cGVMaXN0Lmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICBpZiAoY2F0ZWdvcnkgPT0gdHlwZUxpc3RbaV0udmFsdWUpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHR5cGVMaXN0W2ldLm5hbWU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9O1xyXG5cclxuICAgICAgZnVuY3Rpb24gZ2V0UGljUGF0aChpZCkge1xyXG4gICAgICAgIHJldHVybiBzZXJ2aWNlLnByZWZpeCArICcvcGYvcmVzL2Rvd25sb2FkLycgKyBpZDtcclxuICAgICAgfTtcclxuXHJcbiAgICAgIGZ1bmN0aW9uIHNob3dwcm9tcHQoKSB7XHJcbiAgICAgICAgcmV0dXJuIFwiPHAgaWQ9J25vLWNvbnRlbnQnPuayoeacieaCqOafpeeci+eahOWGheWuuTwvcD5cIjtcclxuICAgICAgfTtcclxuXHJcbiAgICAgIC8qKlxyXG4gICAgICAgKlxyXG4gICAgICAgKiBAcGFyYW0gYXBwSWRcclxuICAgICAgICogQHBhcmFtIGtpbmRDb2RlIDE65a6i5oi356uvIDLvvJrmtY/op4jlmahcclxuICAgICAgICovXHJcbiAgICAgIGZ1bmN0aW9uIHZlcmlmeUFwcChhcHBJZCwga2luZENvZGUpIHtcclxuICAgICAgICB2YXIgdyA9IHdpbmRvdztcclxuICAgICAgICBpZiAoa2luZENvZGUgPT0gJzInKSB7XHJcbiAgICAgICAgICB3ID0gd2luZG93Lm9wZW4oJ2Fib3V0OmJsYW5rJylcclxuICAgICAgICB9XHJcbiAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgIHVybDogc2VydmljZS5odG1sSG9zdCArIFwiL3BmL2FwaS9hcHAvdmVyaWZ5XCIsXHJcbiAgICAgICAgICB0eXBlOiBcImdldFwiLFxyXG4gICAgICAgICAgZGF0YToge1wiYXBwSWRcIjogYXBwSWR9LFxyXG4gICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgaWYgKGRhdGEuY29kZSA9PSBcInN1Y2Nlc3NcIikge1xyXG4gICAgICAgICAgICAgIHcubG9jYXRpb24uaHJlZiA9IGRhdGEuZGF0YTtcclxuICAgICAgICAgICAgfSBlbHNlIGlmIChkYXRhLmNvZGUgPT0gXCJmYWlsZWRcIikge1xyXG4gICAgICAgICAgICAgIGlmIChraW5kQ29kZSA9PSAnMicpIHtcclxuICAgICAgICAgICAgICAgIHcuY2xvc2UoKTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgbGF5ZXIuYWxlcnQoZGF0YS5tc2csIHtpY29uOiAwfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICBlcnJvcjogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgbGF5ZXIuYWxlcnQoXCLor7fmsYLlpLHotKVcIiwge2ljb246IDB9KTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgfTtcclxuXHJcbiAgICAgIGZ1bmN0aW9uIGRvd25WZXJpZnlBcHAoYXBwSWQpIHtcclxuICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgdXJsOiBzZXJ2aWNlLmh0bWxIb3N0ICsgXCIvcGYvYXBpL2FwcC92ZXJpZnlEb3duXCIsXHJcbiAgICAgICAgICB0eXBlOiBcImdldFwiLFxyXG4gICAgICAgICAgZGF0YToge1wiYXBwSWRcIjogYXBwSWR9LFxyXG4gICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHtcclxuICAgICAgICAgICAgaWYgKGRhdGEuY29kZSA9PSBcInN1Y2Nlc3NcIikge1xyXG4gICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gZGF0YS5kYXRhO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKGRhdGEuY29kZSA9PSBcImZhaWxlZFwiKSB7XHJcbiAgICAgICAgICAgICAgbGF5ZXIuYWxlcnQoXCLmgqjmsqHmnInor6XmnYPpmZDkuIvovb3jgIJcIiwge2ljb246IDB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIGVycm9yOiBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICBsYXllci5hbGVydChcIuivt+axguWksei0pVwiLCB7aWNvbjogMH0pO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9O1xyXG5cclxuICAgICAgJChcImJvZHlcIikuZGVsZWdhdGUoJyNhcHAtZGV0YWlscyAuaW50by1hcHAnLCAnY2xpY2snLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgICAgaWYgKCFoZWFkZXIuZ2V0VXNlcigpKSB7XHJcbiAgICAgICAgICBsYXllci5hbGVydChcIuivt+eZu+W9leWQjuaTjeS9nOOAglwiLCB7aWNvbjogMH0pO1xyXG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICB2ZXJpZnlBcHAoJCh0aGlzKS5hdHRyKCdhcHBpZCcpLCAkKHRoaXMpLmF0dHIoJ2tpbmRDb2RlJykpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICAgICQoXCJib2R5XCIpLmRlbGVnYXRlKCcjYXBwLWRldGFpbHMgLmRvd24tYXBwJywgJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAgIGlmICghaGVhZGVyLmdldFVzZXIoKSkge1xyXG4gICAgICAgICAgbGF5ZXIuYWxlcnQoXCLor7fnmbvlvZXlkI7mk43kvZzjgIJcIiwge2ljb246IDB9KTtcclxuICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgZG93blZlcmlmeUFwcCgkKHRoaXMpLmF0dHIoJ2FwcGlkJykpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICAgICQoXCJib2R5XCIpLmRlbGVnYXRlKCcucHJhaXNlLWljb24yJywgJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAgIHZhciBUaGlzID0gdGhpcztcclxuICAgICAgICBpZiAoIWhlYWRlci5nZXRVc2VyKCkpIHtcclxuICAgICAgICAgIGxheWVyLmFsZXJ0KFwi6K+355m75b2V5ZCO5pON5L2c44CCXCIsIHtpY29uOiAwfSk7XHJcbiAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGlmICgoJChUaGlzKVswXS50YWdOYW1lID09IFwiU1BBTlwiICYmICEkKFRoaXMpLmhhc0NsYXNzKFwicHJhaXNlZFwiKSkgfHwgKCQoVGhpcylbMF0udGFnTmFtZSA9PSBcIlNUUk9OR1wiICYmICEkKFRoaXMpLmhhc0NsYXNzKFwicHJhaXNlLWljb24tYWN0aXZlXCIpKSkge1xyXG4gICAgICAgICAgICBwcmFpc2VJY29uKCQoVGhpcykuYXR0cihcImFwcGlkXCIpLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgdmFyICRzcGFuQXBwID0gJChcInNwYW5bYXBwaWQ9J1wiICsgJChUaGlzKS5hdHRyKFwiYXBwaWRcIikgKyBcIiddXCIpO1xyXG4gICAgICAgICAgICAgIHZhciAkc3Ryb25nQXBwID0gJChcInN0cm9uZ1thcHBpZD0nXCIgKyAkKFRoaXMpLmF0dHIoXCJhcHBpZFwiKSArIFwiJ11cIik7XHJcbiAgICAgICAgICAgICAgaWYgKCRzcGFuQXBwLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgICAgICRzcGFuQXBwLmFkZENsYXNzKFwicHJhaXNlZFwiKS5yZW1vdmVDbGFzcyhcInVucHJhaXNlX1wiICsgJChUaGlzKS5hdHRyKFwiYXBwaWRcIikpO1xyXG4gICAgICAgICAgICAgICAgJC5lYWNoKCRzcGFuQXBwLCBmdW5jdGlvbiAoaSkge1xyXG4gICAgICAgICAgICAgICAgICAkKHRoaXMpLnNpYmxpbmdzKFwic3BhblwiKS50ZXh0KHBhcnNlSW50KCQodGhpcykuc2libGluZ3MoXCJzcGFuXCIpLnRleHQoKSkgKyAxKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgaWYgKCRzdHJvbmdBcHAubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgJHN0cm9uZ0FwcC5hZGRDbGFzcyhcInByYWlzZS1pY29uLWFjdGl2ZVwiKTtcclxuICAgICAgICAgICAgICAgICRzdHJvbmdBcHAuc2libGluZ3MoXCJzdHJvbmdcIikudGV4dChwYXJzZUludCgkc3Ryb25nQXBwLnNpYmxpbmdzKFwic3Ryb25nXCIpLnRleHQoKSkgKyAxKTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgZm9yICh2YXIga2V5IGluIGFwcERhdGFMaXN0KSB7XHJcbiAgICAgICAgICAgICAgICAkLmVhY2goYXBwRGF0YUxpc3Rba2V5XSwgZnVuY3Rpb24gKGkpIHtcclxuICAgICAgICAgICAgICAgICAgaWYgKGFwcERhdGFMaXN0W2tleV1baV0uaWQgPT0gJChUaGlzKS5hdHRyKFwiYXBwaWRcIikpIHtcclxuICAgICAgICAgICAgICAgICAgICBhcHBEYXRhTGlzdFtrZXldW2ldLmlzTGlrZSA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgYXBwRGF0YUxpc3Rba2V5XVtpXS5saWtlTnVtID0gcGFyc2VJbnQoYXBwRGF0YUxpc3Rba2V5XVtpXS5saWtlTnVtKSArIDE7XHJcbiAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgZnVuY3Rpb24gcHJhaXNlSWNvbihpZCwgY2FsbGJhY2spIHtcclxuICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgdHlwZTogXCJQT1NUXCIsXHJcbiAgICAgICAgICB1cmw6IHNlcnZpY2UuaHRtbEhvc3QgKyBcIi9wZi9hcGkvYXBwL2xpa2VcIixcclxuICAgICAgICAgIGRhdGE6IHtcImFwcElkXCI6IGlkLCBcImlzTGlrZVwiOiB0cnVlfSxcclxuICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgIGlmIChkYXRhLmNvZGUgPT0gXCJzdWNjZXNzXCIpIHtcclxuICAgICAgICAgICAgICAvL3dpbmRvdy5sb2NhdGlvbi5zZWFyY2ggPSAndGFyZ2V0QXBwPScrZGF0YS5pZDtcclxuICAgICAgICAgICAgICBjYWxsYmFjaygpO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKGRhdGEuY29kZSA9PSBcImxvZ2luX2Vycm9yXCIpIHtcclxuICAgICAgICAgICAgICBsYXllci5hbGVydChkYXRhLm1zZywge2ljb246IDB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIGVycm9yOiBmdW5jdGlvbiAoZXJyb3IpIHtcclxuICAgICAgICAgICAgbGF5ZXIuYWxlcnQoXCLmt7vliqDlh7rplJks6K+356iN5ZCO6YeN6K+V44CCXCIsIHtpY29uOiAwfSk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICApO1xyXG59KVxyXG5cclxuXHQiXX0=
